사용하는 이유
if(요청.user) { 로그인완료 }
예를 들어 로그인 했는지 확인하는 코드를 
수많은 API에서 실행해야한다고 할 때
API마다 이걸 추가하면 힘드니까

그럼 어떻게?
ㄴ 함수화를함
function loginChk(요청,응답,next){
  로그인완료
}

주의! 미들웨어로 함수 만들때 최소 3개 파라미터 만들어야됨 요청,응답,next

저 함수를 그대로 API안에서 loginChk() 해서 사용해도 됨
그러나
app.get('/url', loginChk, (요청,응답)=> { 코드 })
이렇게 사용한다고함 가운데에 함수를 들어가기에 미들웨어라고 부른다고 함


function checkLogin(요청, 응답, next){
  if(요청.user){
    next()
  } else {
    응답.send('로그인안했는데요?')
  }
}

app.get('/어쩌구', checkLogin, (요청, 응답)=>{
  
})
app.get에 적어야 할 내용들을 checkLogin에서 적어서 사용할 수 도있음


next ?? 
next파라미터는 미들웨어 실행 끝나고 다음으로 진행할지 여부를 판단하는 기능
그냥 next() 함수 마지막에 사용해주면됨 안하면 무한로딩


API에서 미들웨어를 여러개 사용하고 싶다면
app.get('/url' , [함수1, 함수2, 함수3 ...] , (요청,응답) => { 코드 })
이렇게 사용가능

모든 API에서 미들웨어를 실행하고 싶다면
app.use() 사용함
app.use(loginChk)
+ app.use() 밑에있는 API만 적용됨
+ app.use() 파라미터에 URL을 적을 수 있는데
그렇게 되면 URL로 시작하는 API들에만 적용을 해줌
app.use('/url',loginChk)

주의
미들웨어 안에서 응답을 해버리면 그 밑에 있는 나머지 코드들이 실행되지않음